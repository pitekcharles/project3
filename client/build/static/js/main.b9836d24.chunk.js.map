{"version":3,"sources":["Components/NavBarWrapper/index.js","Components/FormWrapper/index.js","Components/Label/index.js","Components/Input/index.js","Components/Button/index.js","Components/HeroTitle/index.js","Components/HeroWrapper/index.js","Components/HeroSubtitle/index.js","Pages/Home.js","utils/API.js","Pages/SignUp.js","Components/NavBarItem/index.js","Pages/UserHome.js","Pages/GuildLeaderHome.js","App.js","serviceWorker.js","index.js"],"names":["NavBarWrapper","_ref","children","react_default","a","createElement","Fragment","className","role","aria-label","FormWrapper","Label","Input","placeholder","dataValue","handleInputChange","value","name","type","Object","defineProperty","data-value","onChange","Button","onClick","data","HeroTitle","HeroWrapper","HeroSubtitle","Home","Components_HeroWrapper","Components_HeroTitle","Components_HeroSubtitle","Components_FormWrapper","Components_Label","Components_Input","react_router_dom","to","Components_Button","API","getCharacters","axios","get","addCharacter","characterData","post","getCharacter","id","deleteCharacter","delete","updateCharacter","put","login","loginInfo","signup","signupInfo","isLoggedIn","logout","SignUp","state","username","password","confirmPassword","email","event","target","_this","setState","handleFormSubmit","preventDefault","console","log","handleSignUpSubmit","then","res","catch","err","handleOptionChange","selectedOption","this","Component","NavBarItem","route","UserHome","GuildLeaderHome","guildMembers","characterName","guildName","serverName","classType","populateAttendanceTracker","response","characterArray","i","length","push","characterId","_id","attendanceScore","handleCharacterSubmit","class","guild","attendanceOnTime","getAttribute","newScore","filter","item","attendanceNoShow","attendanceLate","_this2","map","key","App","Components_NavBarWrapper","Components_NavBarItem","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b9836d24.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NavBarWrapper ({ children }) {\n    return (\n        <>\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"navbar-brand\">\n                    <h1 className=\"navbar-item\">\n                        Guild Assistant\n                    </h1>\n                    {children}\n                </div>\n            </nav>       \n        </> \n    );\n}\n\nexport default NavBarWrapper;","import React from \"react\";\n\nfunction FormWrapper({ children }) {\n    return (\n        <div className=\"box\">\n            <div className=\"field\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default FormWrapper;","import React from \"react\";\n\nfunction Label({ children }) {\n    return (\n        <label className=\"label\">{children}</label>\n    );\n}\n\nexport default Label;","import React from \"react\";\n\nfunction Input ({ placeholder, dataValue, handleInputChange, value, name, type }){\n    return (\n        <div className=\"control\">\n            <input className=\"input\" \n                type=\"text\" \n                data-value={dataValue} \n                placeholder={placeholder} \n                onChange={handleInputChange}\n                value={value}\n                name={name}\n                type={type} />\n        </div>\n    )\n}\n\nexport default Input;","import React from \"react\";\n\nfunction Button ({ children, onClick, type, data }) {\n    return (\n    <button className={\"button \" + type}  onClick={onClick} data-value={data}>{children}</button>\n    );\n}\n\nexport default Button;","import React from \"react\";\n\nfunction HeroTitle({ children }) {\n    return (\n        <h1 className=\"title\">\n            {children}\n        </h1>\n    );\n}\n\nexport default HeroTitle;","import React from \"react\";\n \nfunction HeroWrapper({ children }) {\n    return (\n        <section className=\"hero is-primary is-bold\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    {children}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default HeroWrapper;","import React from \"react\";\n\nfunction HeroSubtitle({ children }) {\n    return (\n    <h2 className=\"subtitle\">\n        {children}\n    </h2>\n    )\n}\n\nexport default HeroSubtitle;","import React from \"react\";\nimport FormWrapper from \"../Components/FormWrapper\";\nimport Label from \"../Components/Label\";\nimport Input from \"../Components/Input\";\nimport Button from \"../Components/Button\";\nimport HeroTitle from \"../Components/HeroTitle\";\nimport HeroWrapper from \"../Components/HeroWrapper\";\nimport HeroSubtitle from \"../Components/HeroSubtitle\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Home() {\n   \n    return (\n        <>\n            <HeroWrapper>\n                <HeroTitle>\n                    Guild Assistant\n                </HeroTitle>\n                <HeroSubtitle>\n                    Your source for guild management tools\n                </HeroSubtitle>\n            </HeroWrapper>\n            <br />\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <div className=\"box\">\n                        <HeroWrapper>\n                            <HeroTitle>\n                                About\n                            </HeroTitle>\n                        </HeroWrapper>\n\n                        This application is designed to be a one stop shop for all things gaming. Upon entering your login credentials, you will be able to mark yourself present for any and all guild related activities. The Guild Master (GM) will be able to post anything that may be applicable to the group as a whole. \n                    </div>\n                </div>\n                <div className=\"column\">\n                    <FormWrapper>\n                        <HeroWrapper>\n                            <HeroTitle>\n                                Login\n                            </HeroTitle>\n                        </HeroWrapper>\n                        <br />\n                        <Label>\n                            Username:\n                        </Label>\n                        <Input placeholder=\"Username\" dataValue=\"username\" />\n                        <br />\n                        <Label>\n                            Password:\n                        </Label>\n                        <Input placeholder=\"Password\" dataValue=\"password\" />\n                        <br />\n                        <Link to=\"/guildleaderhome\"><Button>Login</Button></Link> \n                        <Link to=\"/signup\"><Button>Sign Up</Button></Link>\n                    </FormWrapper>\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default Home;","import axios from \"axios\";\n\nexport default {\n    getCharacters: function () {\n        return axios.get(\"/api/characters\");\n    },\n    addCharacter: function (characterData) {\n        return axios.post(\"/api/characters\", characterData);\n    },\n    getCharacter: function (id) {\n        return axios.get(\"/api/characters/\" + id);\n    },\n    deleteCharacter: function (id) {\n        return axios.delete(\"/api/characters/\" + id)\n    },\n    updateCharacter: function(id, characterData) {\n        return axios.put(\"/api/characters/\" + id, characterData)\n    },\n\n\n    login: function (loginInfo) {\n        return axios.post(\"/api/users/login\", loginInfo)\n    },\n\n    signup: function (signupInfo) {\n        return axios.post(\"/auth/signup\", signupInfo)\n    },\n\n    isLoggedIn: function () {\n        return axios.get(\"/api/users/profile\");\n    },\n\n    logout: function () {\n        return axios.get(\"/api/users/logout\")\n    }\n\n}\n","import React, { Component } from \"react\";\nimport FormWrapper from \"../Components/FormWrapper\";\nimport Label from \"../Components/Label\";\nimport Input from \"../Components/Input\";\nimport Button from \"../Components/Button\";\nimport HeroTitle from \"../Components/HeroTitle\";\nimport HeroWrapper from \"../Components/HeroWrapper\";\nimport HeroSubtitle from \"../Components/HeroSubtitle\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\n\nclass SignUp extends Component {\n    state = {\n        username: false,\n        password: false,\n        confirmPassword: false,\n        email: false,\n\n    };\n\n    // componentDidMount() {\n    //     console.log(this.props);\n    //     this.validatePassword();\n    // }\n\n    // componentDidUpdate() {\n\n    //     // functions to check the input fields, and update the state if they are valid\n    //     this.confirmPassword();\n    //     this.validatePassword();\n    //     this.passwordMessage();\n    //     this.validateEmail();\n    //     this.validUsername();\n    // }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n//  // uses regex to check is email is valid\n//     validateEmail = () => {\n//         let validEmail = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n//         let valid = validEmail.test(this.props.email);\n//         if (!this.state.validEmail && valid) {\n//             this.setState({\n//                 validEmail: true\n//             });\n//         }\n//         if (this.state.validEmail && !valid) {\n//             this.setState({\n//                 validEmail: false\n//             });\n//         }\n//     }\n\n    // // make sure username is at least 5 characters\n    // validUsername = ()=> {\n    //     if(this.props.username.length > 4  && !this.state.validUsername ) {\n    //         this.setState({\n    //             validUsername: true\n    //         });\n    //     }\n\n    //     if(this.props.username.length < 4  && this.state.validUsername) {\n    //         this.setState({\n    //             validUsername: false\n    //         });\n    //     }\n    // }\n\n    //  // checks is password meets regex test (at least 8 letters, 1 capital and 1 number)\n    //  validatePassword = ()=> {\n    //     let strongPassword = new RegExp(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/);\n    //     let valid = strongPassword.test(this.props.password);\n    //     if (!this.state.validPassword && valid) {\n    //         this.setState({\n    //             validPassword: true\n    //         });\n    //     }\n    //     if (this.state.validPassword && !valid) {\n    //         this.setState({\n    //             validPassword: false,\n    //         });\n    //     }\n    // }\n\n    // // checks if 2 password fields match\n    // confirmPassword = () => {\n    //     if (!this.state.confirmPassword && this.state.password !== \"\" && this.state.password === this.props.password) {\n    //         this.setState({\n    //             confirmPassword: true\n    //         });\n    //     }\n    //     if (this.state.confirmPassword && this.state.password !== this.props.password) {\n    //         this.setState({\n    //             confirmPassword: false\n    //         });\n    //     }\n    // }\n\n    // // displays the password message if it exists\n    // passwordMessage = () => {\n    //     let message = \"at least 8 letters, 1 capital & 1 number\"\n    //     if (this.props.password !== \"\" && !this.state.validPassword && this.state.passwordMessage !== message) {\n    //         this.setState({\n    //             passwordMessage: message\n    //         });\n    //     }\n    //     if (this.state.validPassword && this.state.passwordMessage !== \"\") {\n    //         this.setState({\n    //             passwordMessage: \"\"\n    //         });\n    //     }\n    //     if (this.state.passwordMessage === message && this.props.password === \"\") {\n    //         this.setState({\n    //             passwordMessage: \"\"\n    //         });\n    //     } \n    // }\n\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(\"go for it\")\n    }\n\n    handleSignUpSubmit = event => {\n        event.preventDefault();\n        API.signup({\n            username: this.state.username,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            email: this.state.email,\n        })\n            .then(res => this.setState({\n                username: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                email: \"\"\n            }))\n            .catch(err => console.log(err));\n    }\n\n    handleOptionChange = event => {\n        this.setState({\n            selectedOption: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <HeroWrapper>\n                    <HeroTitle>\n                        Sign Up\n                </HeroTitle>\n                    <HeroSubtitle>\n                        To start using Guild Assistant fill out the following sign up form\n                </HeroSubtitle>\n                </HeroWrapper>\n                <br />\n                <div className=\"columns is-mobile\">\n                    <div className=\"column is-10 is-offset-1\">\n                        <div className=\"box\">\n                            <HeroWrapper>\n                                <HeroTitle>\n                                    Welcome New User\n                            </HeroTitle>\n                            </HeroWrapper>\n                            <FormWrapper>\n                                <Label>\n                                    Username:\n                            </Label>\n                                <Input placeholder=\"Username\" dataValue=\"username\" />\n                                <br />\n                                <Label>\n                                    Password:\n                            </Label>\n                                <Input placeholder=\"Password\" dataValue=\"password\" type=\"password\" />\n                                <br />\n                                <Label>\n                                    Confirm Password:\n                            </Label>\n                                <Input placeholder=\"Confirm Password\" dataValue=\"passwordConfirm\" type=\"password\" />\n                                <br />\n                                <Label>\n                                    Email:\n                            </Label>\n                                <Input placeholder=\"email\" dataValue=\"email\" />\n                                <br />\n                                <Button onClick={this.handleSignUpSubmit}>Create Account</Button>\n\n                            </FormWrapper>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default SignUp;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBarItem({ route, children }) {\n    return (\n        <Link className=\"navbar-item\" to={route} >\n            {children}\n        </Link>\n    )\n}\n\nexport default NavBarItem;","import React from \"react\";\nimport HeroTitle from \"../Components/HeroTitle\";\nimport HeroWrapper from \"../Components/HeroWrapper\";\nimport HeroSubtitle from \"../Components/HeroSubtitle\";\n\nfunction UserHome() {\n    return (\n        <>\n            <HeroWrapper>\n                <HeroTitle>\n                    User Home Page\n                </HeroTitle>\n                <HeroSubtitle>\n                    Navigate to other features from here\n                </HeroSubtitle>\n            </HeroWrapper>\n            <br />\n            <div className=\"columns\">\n                <div className=\"column is-10 is-offset-1\">\n                    <div className=\"box\">\n                        <HeroWrapper>\n                            <HeroTitle>\n                                User Info\n                            </HeroTitle>\n                            <HeroSubtitle>\n                            </HeroSubtitle>\n                        </HeroWrapper>\n                    </div>\n                </div>\n            </div>\n            <div className=\"columns\">\n                <div className=\"column is-5 is-offset-1\">\n                    <div className=\"box\">\n                        <HeroWrapper>\n                            <HeroTitle>\n                                Guild Info\n                            </HeroTitle>\n                            <HeroSubtitle>\n                            </HeroSubtitle>\n                        </HeroWrapper>\n                    </div>\n                </div>\n                <div className=\"column is-5\">\n                    <div className=\"box\">\n                        <HeroWrapper>\n                            <HeroTitle>\n                                Raid Schedule\n                            </HeroTitle>\n                            <HeroSubtitle>\n                            </HeroSubtitle>\n                        </HeroWrapper>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default UserHome;","import React, { Component } from \"react\";\nimport HeroTitle from \"../Components/HeroTitle\";\nimport HeroWrapper from \"../Components/HeroWrapper\";\nimport HeroSubtitle from \"../Components/HeroSubtitle\";\nimport Button from \"../Components/Button\";\nimport FormWrapper from \"../Components/FormWrapper\";\nimport Label from \"../Components/Label\";\nimport Input from \"../Components/Input\";\nimport API from \"../utils/API\";\n\nclass GuildLeaderHome extends Component {\n    state = {\n        guildMembers: [],\n        characterName: \"\",\n        guildName: \"\",\n        serverName: \"\",\n        classType: \"\"\n    };\n\n    componentDidMount() {\n        this.populateAttendanceTracker()\n    }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    populateAttendanceTracker = () => {\n        API.getCharacters()\n            .then(response => {\n                var characterArray = [];\n                for (var i = 0; i < response.data.length; i++) {\n                    characterArray.push({\n                        characterName: response.data[i].characterName,\n                        characterId: response.data[i]._id,\n                        attendanceScore: response.data[i].attendanceScore\n                    })\n                }\n                this.setState({ guildMembers: characterArray })\n                console.log(response);\n            })\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(\"go for it\")\n    }\n\n    handleCharacterSubmit = event => {\n        event.preventDefault();\n        API.addCharacter({\n            characterName: this.state.characterName,\n            serverName: this.state.serverName,\n            class: this.state.classType,\n            guild: this.state.guildName\n        })\n            .then(res => this.setState({\n                characterName: \"\",\n                serverName: \"\",\n                classType: \"\",\n                guildName: \"\"\n            }))\n            .catch(err => console.log(err));\n        this.populateAttendanceTracker();\n\n    }\n\n    handleOptionChange = event => {\n        this.setState({\n            selectedOption: event.target.value\n        })\n    }\n\n    attendanceOnTime = event => {\n        event.preventDefault();\n        var id = event.target.getAttribute(\"data-value\")\n        var characterArray = this.state.guildMembers.filter(item => item.characterId === id);\n        var newScore = characterArray[0].attendanceScore;\n        newScore = newScore + 1;\n        API.updateCharacter(id, { attendanceScore: newScore })\n            .then(res => this.populateAttendanceTracker())\n            .catch(err => console.log(err))\n    }\n\n    attendanceNoShow = event => {\n        event.preventDefault();\n        var id = event.target.getAttribute(\"data-value\")\n        var characterArray = this.state.guildMembers.filter(item => item.characterId === id);\n        var newScore = characterArray[0].attendanceScore;\n        newScore = newScore - 1;\n        API.updateCharacter(id, { attendanceScore: newScore })\n            .then(res => this.populateAttendanceTracker())\n            .catch(err => console.log(err))\n    }\n\n    attendanceLate = event => {\n        event.preventDefault();\n        var id = event.target.getAttribute(\"data-value\")\n        var characterArray = this.state.guildMembers.filter(item => item.characterId === id);\n        var newScore = characterArray[0].attendanceScore;\n        newScore = newScore - .5;\n        API.updateCharacter(id, { attendanceScore: newScore })\n            .then(res => this.populateAttendanceTracker())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                <HeroWrapper>\n                    <HeroTitle>\n                        Guild Leader Home Page\n                </HeroTitle>\n                    <HeroSubtitle>\n                        Your hub for guild management\n                </HeroSubtitle>\n                </HeroWrapper>\n                <br />\n                <div className=\"columns\">\n                    <div className=\"column is-10 is-offset-1\">\n                        <div className=\"box\">\n                            <HeroWrapper>\n                                <HeroTitle>\n                                    Guild Info\n                            </HeroTitle>\n                                <HeroSubtitle>\n                                </HeroSubtitle>\n                            </HeroWrapper>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"columns\">\n                    <div className=\"column is-5 is-offset-1\">\n                        <div className=\"box\">\n                            <HeroWrapper>\n                                <HeroTitle>\n                                    Attendance\n                            </HeroTitle>\n                            </HeroWrapper>\n                            <br />\n                            <ul>\n                                {this.state.guildMembers.map(item => (\n                                    <>\n                                        <li key={item.characterId}>\n                                            <div className=\"box\" >\n                                                <p>{item.characterName}</p>\n                                                <div className=\"field\">\n                                                    <div className=\"control\">\n                                                        <div className=\"row\">\n                                                            <div className=\"columns\">\n                                                                <div className=\"column is-2\">\n                                                                    <Button\n                                                                        type=\"is-success is-small\"\n                                                                        data={item.characterId}\n                                                                        onClick={this.attendanceOnTime}\n                                                                    >\n                                                                        --On time--\n                                                                    </Button>\n                                                                </div>\n                                                                <div className=\"column is-2\">\n                                                                    <Button\n                                                                        type=\"is-warning is-small\"\n                                                                        data={item.characterId}\n                                                                        onClick={this.attendanceLate}\n                                                                    >\n                                                                        ----Late----  \n                                                                    </Button>\n                                                                </div>\n                                                                <div className=\"column is-2\">\n                                                                    <Button\n                                                                        type=\"is-warning is-small\"\n                                                                        data={item.characterId}\n                                                                        onClick={this.attendanceLate}\n                                                                    >\n                                                                        Leave Early\n                                                                    </Button>\n                                                                </div>\n                                                                <div className=\"column is-2\">\n                                                                    <Button\n                                                                        type=\"is-danger is-small\"\n                                                                        data={item.characterId}\n                                                                        onClick={this.attendanceNoShow}\n                                                                    >\n                                                                        -No Show-\n                                                                    </Button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <br />\n                                    </>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"column is-5\">\n                        <div className=\"box\">\n                            <HeroWrapper>\n                                <HeroTitle>\n                                    Attendance Score\n                                </HeroTitle>\n                            </HeroWrapper>\n                            <br />\n                            <ul>\n                                {this.state.guildMembers.map(item => (\n                                    <>\n                                        <li key={item.characterId}>\n                                            <div className=\"box\">\n                                                <p>Character: {item.characterName}</p>\n                                                <br />\n                                                <p>Attendence Score: {item.attendanceScore}</p>\n                                            </div>\n                                        </li>\n                                        <br />\n                                    </>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"columns\">\n                    <div className=\"column is-10 is-offset-1\">\n                        <div className=\"box\">\n                            <HeroWrapper>\n                                <HeroTitle>\n                                    Add new character\n                                </HeroTitle>\n                            </HeroWrapper>\n                            <br />\n                            <FormWrapper>\n                                <Label>\n                                    Character Name:\n                                </Label>\n                                <Input\n                                    placeholder=\"Character Name\"\n                                    name=\"characterName\"\n                                    handleInputChange={this.handleInputChange}\n                                    value={this.state.characterName}\n                                />\n                                <br />\n                                <Label>\n                                    Guild Name:\n                                </Label>\n                                <Input\n                                    placeholder=\"Guild Name\"\n                                    name=\"guildName\"\n                                    handleInputChange={this.handleInputChange}\n                                    value={this.state.guildName}\n                                />\n                                <br />\n                                <Label>\n                                    Server Name:\n                                </Label>\n                                <Input\n                                    placeholder=\"Server Name\"\n                                    name=\"serverName\"\n                                    handleInputChange={this.handleInputChange}\n                                    value={this.state.serverName}\n                                />\n                                <br />\n                                <Label>\n                                    Class:\n                                </Label>\n                                <Input\n                                    placeholder=\"Class\"\n                                    name=\"classType\"\n                                    handleInputChange={this.handleInputChange}\n                                    value={this.state.classType}\n                                />\n                                <br />\n                                <Button onClick={this.handleCharacterSubmit}>Add Character</Button>\n                            </FormWrapper>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default GuildLeaderHome;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavBarWrapper from \"./Components/NavBarWrapper\";\nimport Home from \"./Pages/Home\";\nimport SignUp from \"./Pages/SignUp\";\nimport NavBarItem from \"./Components/NavBarItem\";\nimport UserHome from \"./Pages/UserHome\";\nimport GuildLeaderHome from \"./Pages/GuildLeaderHome\";\n\n\nfunction App() {\n    return (\n        <>\n            <Router>\n                <div>\n                    <NavBarWrapper>\n                        <NavBarItem route=\"/\">\n                            Home\n                        </NavBarItem>\n                        <NavBarItem route=\"/signup\">\n                            Sign Up\n                        </NavBarItem>\n                        <NavBarItem route=\"/userhome\">\n                            User\n                        </NavBarItem>\n                        <NavBarItem route=\"/guildleaderhome\">\n                            Guild Leader\n                        </NavBarItem>\n                    </NavBarWrapper>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/signup\" component={SignUp} />\n                    <Route exact path=\"/userhome\" component={UserHome} />\n                    <Route exact path=\"/guildleaderhome\" component={GuildLeaderHome} />\n                </div>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}